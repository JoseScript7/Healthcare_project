{"ast":null,"code":"import api from './api';\nexport const transferService = {\n  async createTransfer(transferData) {\n    try {\n      const response = await api.post('/transfers', transferData);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Create Transfer Error:', error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to create transfer');\n    }\n  },\n  async getTransfers() {\n    try {\n      const response = await api.get('/transfers');\n      return response.data;\n    } catch (error) {\n      console.error('Get Transfers Error:', error);\n      throw new Error('Failed to fetch transfers');\n    }\n  },\n  async approveTransfer(transferId) {\n    try {\n      const response = await api.put(`/transfers/${transferId}/approve`);\n      return response.data;\n    } catch (error) {\n      console.error('Approve Transfer Error:', error);\n      throw new Error('Failed to approve transfer');\n    }\n  },\n  async completeTransfer(transferId) {\n    try {\n      const response = await api.put(`/transfers/${transferId}/complete`);\n      return response.data;\n    } catch (error) {\n      console.error('Complete Transfer Error:', error);\n      throw new Error('Failed to complete transfer');\n    }\n  },\n  async getTransferHistory(transferId) {\n    try {\n      const response = await api.get(`/transfers/${transferId}/history`);\n      return response.data;\n    } catch (error) {\n      console.error('Get Transfer History Error:', error);\n      throw new Error('Failed to fetch transfer history');\n    }\n  }\n};","map":{"version":3,"names":["api","transferService","createTransfer","transferData","response","post","data","error","_error$response","_error$response$data","console","Error","getTransfers","get","approveTransfer","transferId","put","completeTransfer","getTransferHistory"],"sources":["F:/FullStack/2025 - Feb/ExpiryTracking_and_redistribution/client/src/services/transfer.service.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const transferService = {\r\n  async createTransfer(transferData) {\r\n    try {\r\n      const response = await api.post('/transfers', transferData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Create Transfer Error:', error);\r\n      throw new Error(error.response?.data?.error || 'Failed to create transfer');\r\n    }\r\n  },\r\n\r\n  async getTransfers() {\r\n    try {\r\n      const response = await api.get('/transfers');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get Transfers Error:', error);\r\n      throw new Error('Failed to fetch transfers');\r\n    }\r\n  },\r\n\r\n  async approveTransfer(transferId) {\r\n    try {\r\n      const response = await api.put(`/transfers/${transferId}/approve`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Approve Transfer Error:', error);\r\n      throw new Error('Failed to approve transfer');\r\n    }\r\n  },\r\n\r\n  async completeTransfer(transferId) {\r\n    try {\r\n      const response = await api.put(`/transfers/${transferId}/complete`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Complete Transfer Error:', error);\r\n      throw new Error('Failed to complete transfer');\r\n    }\r\n  },\r\n\r\n  async getTransferHistory(transferId) {\r\n    try {\r\n      const response = await api.get(`/transfers/${transferId}/history`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get Transfer History Error:', error);\r\n      throw new Error('Failed to fetch transfer history');\r\n    }\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,eAAe,GAAG;EAC7B,MAAMC,cAAcA,CAACC,YAAY,EAAE;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,YAAY,EAAEF,YAAY,CAAC;MAC3D,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAM,IAAII,KAAK,CAAC,EAAAH,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,2BAA2B,CAAC;IAC7E;EACF,CAAC;EAED,MAAMK,YAAYA,CAAA,EAAG;IACnB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,GAAG,CAACa,GAAG,CAAC,YAAY,CAAC;MAC5C,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAM,IAAII,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EACF,CAAC;EAED,MAAMG,eAAeA,CAACC,UAAU,EAAE;IAChC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,GAAG,CAAC,cAAcD,UAAU,UAAU,CAAC;MAClE,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM,IAAII,KAAK,CAAC,4BAA4B,CAAC;IAC/C;EACF,CAAC;EAED,MAAMM,gBAAgBA,CAACF,UAAU,EAAE;IACjC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,GAAG,CAAC,cAAcD,UAAU,WAAW,CAAC;MACnE,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAM,IAAII,KAAK,CAAC,6BAA6B,CAAC;IAChD;EACF,CAAC;EAED,MAAMO,kBAAkBA,CAACH,UAAU,EAAE;IACnC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACa,GAAG,CAAC,cAAcE,UAAU,UAAU,CAAC;MAClE,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAM,IAAII,KAAK,CAAC,kCAAkC,CAAC;IACrD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}