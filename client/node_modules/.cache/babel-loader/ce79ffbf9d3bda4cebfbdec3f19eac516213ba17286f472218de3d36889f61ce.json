{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Gidy\\\\Healthcare_project\\\\client\\\\src\\\\context\\\\OrderContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderContext = /*#__PURE__*/createContext();\nexport const useOrders = () => {\n  _s();\n  return useContext(OrderContext);\n};\n_s(useOrders, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const OrderProvider = ({\n  children\n}) => {\n  _s2();\n  const [orders, setOrders] = useState([{\n    id: 1,\n    medicineName: 'Lipitor',\n    quantity: 100,\n    date: '2024-02-20',\n    status: 'delivered',\n    department: 'cardiology'\n  }\n  // Add more sample orders here\n  ]);\n  const addOrder = newOrder => {\n    setOrders(prev => [...prev, {\n      ...newOrder,\n      id: Date.now()\n    }]);\n  };\n  const updateOrder = (id, updatedOrder) => {\n    setOrders(prev => prev.map(order => order.id === id ? {\n      ...order,\n      ...updatedOrder\n    } : order));\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: {\n      orders,\n      addOrder,\n      updateOrder\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s2(OrderProvider, \"m5oIiD+zvWcSANYtD8B5bqRU+Ec=\");\n_c = OrderProvider;\nvar _c;\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","OrderContext","useOrders","_s","OrderProvider","children","_s2","orders","setOrders","id","medicineName","quantity","date","status","department","addOrder","newOrder","prev","Date","now","updateOrder","updatedOrder","map","order","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Gidy/Healthcare_project/client/src/context/OrderContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst OrderContext = createContext();\r\n\r\nexport const useOrders = () => useContext(OrderContext);\r\n\r\nexport const OrderProvider = ({ children }) => {\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      id: 1,\r\n      medicineName: 'Lipitor',\r\n      quantity: 100,\r\n      date: '2024-02-20',\r\n      status: 'delivered',\r\n      department: 'cardiology'\r\n    },\r\n    // Add more sample orders here\r\n  ]);\r\n\r\n  const addOrder = (newOrder) => {\r\n    setOrders(prev => [...prev, { ...newOrder, id: Date.now() }]);\r\n  };\r\n\r\n  const updateOrder = (id, updatedOrder) => {\r\n    setOrders(prev => prev.map(order => \r\n      order.id === id ? { ...order, ...updatedOrder } : order\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <OrderContext.Provider value={{ orders, addOrder, updateOrder }}>\r\n      {children}\r\n    </OrderContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,SAAS,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,YAAY,CAAC;AAAA;AAACE,EAAA,CAA3CD,SAAS;AAEtB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CACnC;IACEW,EAAE,EAAE,CAAC;IACLC,YAAY,EAAE,SAAS;IACvBC,QAAQ,EAAE,GAAG;IACbC,IAAI,EAAE,YAAY;IAClBC,MAAM,EAAE,WAAW;IACnBC,UAAU,EAAE;EACd;EACA;EAAA,CACD,CAAC;EAEF,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC7BR,SAAS,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE,GAAGD,QAAQ;MAAEP,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACX,EAAE,EAAEY,YAAY,KAAK;IACxCb,SAAS,CAACS,IAAI,IAAIA,IAAI,CAACK,GAAG,CAACC,KAAK,IAC9BA,KAAK,CAACd,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGc,KAAK;MAAE,GAAGF;IAAa,CAAC,GAAGE,KACpD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAElB,MAAM;MAAEQ,QAAQ;MAAEK;IAAY,CAAE;IAAAf,QAAA,EAC7DA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACvB,GAAA,CA5BWF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}