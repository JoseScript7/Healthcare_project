{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Gidy\\\\Healthcare_project\\\\client\\\\src\\\\context\\\\InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { generateSampleData } from '../utils/sampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryContext = /*#__PURE__*/createContext();\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [inventory, setInventory] = useState(generateSampleData());\n  const [orders, setOrders] = useState([]);\n  const addItem = newItem => {\n    // Add to inventory\n    setInventory(prev => [...prev, {\n      ...newItem,\n      id: Date.now(),\n      status: 'In Stock'\n    }]);\n\n    // Create corresponding order\n    const order = {\n      id: Date.now(),\n      medicineId: newItem.id,\n      medicineName: newItem.name,\n      quantity: newItem.currentStock,\n      orderDate: new Date().toISOString(),\n      status: 'Received',\n      supplier: newItem.manufacturer\n    };\n    setOrders(prev => [...prev, order]);\n  };\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      inventory,\n      orders,\n      addItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"qVZCeJvIVns5OuVj8QG38OLrMfs=\");\n_c = InventoryProvider;\nexport const useInventoryContext = () => {\n  _s2();\n  return useContext(InventoryContext);\n};\n_s2(useInventoryContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","generateSampleData","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","inventory","setInventory","orders","setOrders","addItem","newItem","prev","id","Date","now","status","order","medicineId","medicineName","name","quantity","currentStock","orderDate","toISOString","supplier","manufacturer","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInventoryContext","_s2","$RefreshReg$"],"sources":["C:/Users/HP/Gidy/Healthcare_project/client/src/context/InventoryContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { generateSampleData } from '../utils/sampleData';\r\n\r\nconst InventoryContext = createContext();\r\n\r\nexport const InventoryProvider = ({ children }) => {\r\n  const [inventory, setInventory] = useState(generateSampleData());\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const addItem = (newItem) => {\r\n    // Add to inventory\r\n    setInventory(prev => [...prev, { \r\n      ...newItem, \r\n      id: Date.now(),\r\n      status: 'In Stock'\r\n    }]);\r\n\r\n    // Create corresponding order\r\n    const order = {\r\n      id: Date.now(),\r\n      medicineId: newItem.id,\r\n      medicineName: newItem.name,\r\n      quantity: newItem.currentStock,\r\n      orderDate: new Date().toISOString(),\r\n      status: 'Received',\r\n      supplier: newItem.manufacturer\r\n    };\r\n\r\n    setOrders(prev => [...prev, order]);\r\n  };\r\n\r\n  return (\r\n    <InventoryContext.Provider value={{ inventory, orders, addItem }}>\r\n      {children}\r\n    </InventoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useInventoryContext = () => useContext(InventoryContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,kBAAkB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,gBAAgB,gBAAGN,aAAa,CAAC,CAAC;AAExC,OAAO,MAAMO,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACC,kBAAkB,CAAC,CAAC,CAAC;EAChE,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,OAAO,GAAIC,OAAO,IAAK;IAC3B;IACAJ,YAAY,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAC7B,GAAGD,OAAO;MACVE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,MAAM,EAAE;IACV,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMC,KAAK,GAAG;MACZJ,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdG,UAAU,EAAEP,OAAO,CAACE,EAAE;MACtBM,YAAY,EAAER,OAAO,CAACS,IAAI;MAC1BC,QAAQ,EAAEV,OAAO,CAACW,YAAY;MAC9BC,SAAS,EAAE,IAAIT,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC,CAAC;MACnCR,MAAM,EAAE,UAAU;MAClBS,QAAQ,EAAEd,OAAO,CAACe;IACpB,CAAC;IAEDjB,SAAS,CAACG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEK,KAAK,CAAC,CAAC;EACrC,CAAC;EAED,oBACEhB,OAAA,CAACC,gBAAgB,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,SAAS;MAAEE,MAAM;MAAEE;IAAQ,CAAE;IAAAN,QAAA,EAC9DA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAC3B,EAAA,CA/BWF,iBAAiB;AAAA8B,EAAA,GAAjB9B,iBAAiB;AAiC9B,OAAO,MAAM+B,mBAAmB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACK,gBAAgB,CAAC;AAAA;AAACiC,GAAA,CAAzDD,mBAAmB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}