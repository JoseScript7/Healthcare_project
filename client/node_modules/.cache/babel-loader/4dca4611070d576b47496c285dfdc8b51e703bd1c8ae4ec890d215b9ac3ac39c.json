{"ast":null,"code":"var _jsxFileName = \"F:\\\\FullStack\\\\2025 - Feb\\\\ExpiryTracking_and_redistribution\\\\client\\\\src\\\\components\\\\MLInsights\\\\ForecastChart.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForecastChart({\n  data\n}) {\n  if (!(data !== null && data !== void 0 && data.forecast)) return null;\n  const chartData = data.forecast.map((value, index) => {\n    const date = new Date();\n    date.setDate(date.getDate() + index);\n    return {\n      date: format(date, 'MMM dd'),\n      forecast: value\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-chart\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"forecast\",\n          stroke: \"#8884d8\",\n          name: \"Predicted Demand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = ForecastChart;\nexport default ForecastChart;\nvar _c;\n$RefreshReg$(_c, \"ForecastChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","format","jsxDEV","_jsxDEV","ForecastChart","data","forecast","chartData","map","value","index","date","Date","setDate","getDate","className","children","width","height","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","name","_c","$RefreshReg$"],"sources":["F:/FullStack/2025 - Feb/ExpiryTracking_and_redistribution/client/src/components/MLInsights/ForecastChart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport { format } from 'date-fns';\r\n\r\nfunction ForecastChart({ data }) {\r\n  if (!data?.forecast) return null;\r\n\r\n  const chartData = data.forecast.map((value, index) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() + index);\r\n    return {\r\n      date: format(date, 'MMM dd'),\r\n      forecast: value\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"forecast-chart\">\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"forecast\"\r\n            stroke=\"#8884d8\"\r\n            name=\"Predicted Demand\"\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForecastChart; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,QACd,UAAU;AACjB,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,aAAaA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC/B,IAAI,EAACA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,QAAQ,GAAE,OAAO,IAAI;EAEhC,MAAMC,SAAS,GAAGF,IAAI,CAACC,QAAQ,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACpD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,GAAGJ,KAAK,CAAC;IACpC,OAAO;MACLC,IAAI,EAAEV,MAAM,CAACU,IAAI,EAAE,QAAQ,CAAC;MAC5BL,QAAQ,EAAEG;IACZ,CAAC;EACH,CAAC,CAAC;EAEF,oBACEN,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7Bb,OAAA,CAACH,mBAAmB;MAACiB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAF,QAAA,eAC5Cb,OAAA,CAACV,SAAS;QAACY,IAAI,EAAEE,SAAU;QAAAS,QAAA,gBACzBb,OAAA,CAACN,aAAa;UAACsB,eAAe,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCpB,OAAA,CAACR,KAAK;UAAC6B,OAAO,EAAC;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxBpB,OAAA,CAACP,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTpB,OAAA,CAACL,OAAO;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXpB,OAAA,CAACJ,MAAM;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVpB,OAAA,CAACT,IAAI;UACH+B,IAAI,EAAC,UAAU;UACfD,OAAO,EAAC,UAAU;UAClBE,MAAM,EAAC,SAAS;UAChBC,IAAI,EAAC;QAAkB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACK,EAAA,GA/BQxB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}