{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Gidy\\\\Healthcare_project\\\\client\\\\src\\\\components\\\\Analytics\\\\ExpiryChart.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction ExpiryChart({\n  data\n}) {\n  const expiringCounts = data.reduce((acc, item) => {\n    const daysUntilExpiry = Math.ceil((new Date(item.expiry_date) - new Date()) / (1000 * 60 * 60 * 24));\n    if (daysUntilExpiry <= 30) acc['30 days'] = (acc['30 days'] || 0) + 1;else if (daysUntilExpiry <= 60) acc['60 days'] = (acc['60 days'] || 0) + 1;else acc['90 days'] = (acc['90 days'] || 0) + 1;\n    return acc;\n  }, {});\n  const chartData = {\n    labels: Object.keys(expiringCounts),\n    datasets: [{\n      data: Object.values(expiringCounts),\n      backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(255, 159, 64, 0.8)', 'rgba(255, 205, 86, 0.8)']\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Items by Expiry Timeline'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_c = ExpiryChart;\nexport default ExpiryChart;\nvar _c;\n$RefreshReg$(_c, \"ExpiryChart\");","map":{"version":3,"names":["React","Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","ExpiryChart","data","expiringCounts","reduce","acc","item","daysUntilExpiry","Math","ceil","Date","expiry_date","chartData","labels","Object","keys","datasets","values","backgroundColor","options","responsive","plugins","legend","position","title","display","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Gidy/Healthcare_project/client/src/components/Analytics/ExpiryChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction ExpiryChart({ data }) {\r\n  const expiringCounts = data.reduce((acc, item) => {\r\n    const daysUntilExpiry = Math.ceil(\r\n      (new Date(item.expiry_date) - new Date()) / (1000 * 60 * 60 * 24)\r\n    );\r\n    \r\n    if (daysUntilExpiry <= 30) acc['30 days'] = (acc['30 days'] || 0) + 1;\r\n    else if (daysUntilExpiry <= 60) acc['60 days'] = (acc['60 days'] || 0) + 1;\r\n    else acc['90 days'] = (acc['90 days'] || 0) + 1;\r\n    \r\n    return acc;\r\n  }, {});\r\n\r\n  const chartData = {\r\n    labels: Object.keys(expiringCounts),\r\n    datasets: [\r\n      {\r\n        data: Object.values(expiringCounts),\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.8)',\r\n          'rgba(255, 159, 64, 0.8)',\r\n          'rgba(255, 205, 86, 0.8)',\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Items by Expiry Timeline'\r\n      }\r\n    }\r\n  };\r\n\r\n  return <Doughnut data={chartData} options={options} />;\r\n}\r\n\r\nexport default ExpiryChart; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SACEC,KAAK,IAAIC,OAAO,EAChBC,UAAU,EACVC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBL,OAAO,CAACM,QAAQ,CACdL,UAAU,EACVC,OAAO,EACPC,MACF,CAAC;AAED,SAASI,WAAWA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC7B,MAAMC,cAAc,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAChD,MAAMC,eAAe,GAAGC,IAAI,CAACC,IAAI,CAC/B,CAAC,IAAIC,IAAI,CAACJ,IAAI,CAACK,WAAW,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAClE,CAAC;IAED,IAAIH,eAAe,IAAI,EAAE,EAAEF,GAAG,CAAC,SAAS,CAAC,GAAG,CAACA,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KACjE,IAAIE,eAAe,IAAI,EAAE,EAAEF,GAAG,CAAC,SAAS,CAAC,GAAG,CAACA,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KACtEA,GAAG,CAAC,SAAS,CAAC,GAAG,CAACA,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;IAE/C,OAAOA,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAMO,SAAS,GAAG;IAChBC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACZ,cAAc,CAAC;IACnCa,QAAQ,EAAE,CACR;MACEd,IAAI,EAAEY,MAAM,CAACG,MAAM,CAACd,cAAc,CAAC;MACnCe,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB;IAE7B,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBAAO3B,OAAA,CAACP,QAAQ;IAACU,IAAI,EAAEU,SAAU;IAACO,OAAO,EAAEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxD;AAACC,EAAA,GAzCQ9B,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}